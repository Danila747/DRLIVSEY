name: CI for Foodgram

on:
  push:
    branches: [ master ]

jobs:

  tests:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-builtins flake8-import-order pep8-naming flake8-broken-line flake8-quotes
        pip install -r backend/requirements.txt 

    - name: Test with flake8
      run: |
        python -m flake8 backend/

  copy_infra_to_server:
    name: Copy docker-compose.yml and nginx.conf
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v2

    - name: Create projects directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          mkdir -p foodgram/infra

    - name: Copy files
      uses: garygrossgarten/github-action-scp@release
      with:
          local: /infra
          remote: /home/${{ secrets.HOST_USER }}/foodgram/infra
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USER }}
          privateKey: ${{ secrets.SSH_KEY }}


  # build_push_to_DockerHub:
  #   name: Building docker image and pushing it to Docker Hub
  #   runs-on: ubuntu-20.04
  #   needs: tests
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1

  #   - name: Login to Docker
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_USER }}
  #       password: p${{ secrets.DOCKER_PASS }}

  #   - name: Push to DockerHub
  #     uses: docker/build-push-action@v2
  #     with:
  #       push: true
  #       tags: ${{ secrets.DOCKER_USER }}/foodgram:latest

  # deploy:
  #   runs-on: ubuntu-20.04
  #   needs: build_push_to_DockerHub
  #   steps:
  #   - name: remote ssh commands to deploy
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.HOST_IP }}
  #       username: ${{ secrets.HOST_USER }}
  #       key: ${{ secrets.SSH_KEY }}
  #       script: |
  #         sudo docker pull ${{ secrets.DOCKER_USER }}/foodgram
  #         sudo docker stop $(sudo docker ps -a -q)
  #         sudo docker run --rm -d ${{ secrets.DOCKER_USER }}/foodgram
  
  # send_message:
    # runs-on: ubuntu-latest
    # needs: deploy
    # steps:
    # - name: send message
    #   uses: appleboy/telegram-action@master
    #   with:
    #     to: ${{ secrets.TELEGRAM_TO }}
    #     token: ${{ secrets.TELEGRAM_TOKEN }}
    #     message: ${{ github.workflow }} успешно выполнен!